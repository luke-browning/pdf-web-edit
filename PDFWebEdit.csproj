<Project Sdk="Microsoft.NET.Sdk.Web">

  <PropertyGroup>
    <TargetFramework>net6.0</TargetFramework>
    <Nullable>enable</Nullable>
    <IsPackable>false</IsPackable>
    <SpaRoot>ClientApp\</SpaRoot>
    <SpaProxyServerUrl>http://localhost:44437</SpaProxyServerUrl>
    <SpaProxyLaunchCommand>npm start</SpaProxyLaunchCommand>
    <ImplicitUsings>enable</ImplicitUsings>
    <GenerateDocumentationFile>True</GenerateDocumentationFile>
    <DocumentationFile>PDFWebEdit.xml</DocumentationFile>
    <UserSecretsId>15b132e2-632c-4239-a0fd-c300da1e056f</UserSecretsId>
    <DockerDefaultTargetOS>Linux</DockerDefaultTargetOS>
    <DockerfileContext>.</DockerfileContext>
    <RunWorkingDirectory>$(MSBuildProjectDirectory)</RunWorkingDirectory>
  </PropertyGroup>

  <ItemGroup>
    <PackageReference Include="Docnet.Core" Version="2.3.1" />
    <PackageReference Include="itext7" Version="7.2.5" />
    <PackageReference Include="Magick.NET-Q8-x64" Version="13.4.0" />
    <PackageReference Include="Microsoft.AspNetCore.SpaProxy" Version="6.0.1" />
    <PackageReference Include="Microsoft.VisualStudio.Azure.Containers.Tools.Targets" Version="1.14.0" />
    <PackageReference Include="NSwag.MSBuild" Version="13.19.0">
      <PrivateAssets>all</PrivateAssets>
      <IncludeAssets>runtime; build; native; contentfiles; analyzers; buildtransitive</IncludeAssets>
    </PackageReference>
    <PackageReference Include="Octokit" Version="4.0.3" />
    <PackageReference Include="SixLabors.ImageSharp" Version="2.1.3" />
    <PackageReference Include="Swashbuckle.AspNetCore" Version="6.5.0" />
  </ItemGroup>

  <ItemGroup>
    <!-- Don't publish the SPA source files, but do show them in the project files list -->
    <Compile Remove="ClientApp\dist\**" />
    <Content Remove="$(SpaRoot)**" />
    <Content Remove="ClientApp\dist\**" />
    <EmbeddedResource Remove="ClientApp\dist\**" />
    <None Remove="$(SpaRoot)**" />
    <None Remove="ClientApp\dist\**" />
    <None Include="$(SpaRoot)**" Exclude="$(SpaRoot)node_modules\**" />
  </ItemGroup>

  <ItemGroup>
    <None Remove="ClientApp\dist\3rdpartylicenses.txt" />
    <None Remove="ClientApp\dist\assets\fonts\roboto\roboto-v30-latin-regular.eot" />
    <None Remove="ClientApp\dist\assets\fonts\roboto\roboto-v30-latin-regular.svg" />
    <None Remove="ClientApp\dist\assets\fonts\roboto\roboto-v30-latin-regular.ttf" />
    <None Remove="ClientApp\dist\assets\fonts\roboto\roboto-v30-latin-regular.woff" />
    <None Remove="ClientApp\dist\assets\fonts\roboto\roboto-v30-latin-regular.woff2" />
    <None Remove="ClientApp\dist\bootstrap-icons.6959d0d983ee318f8880.woff" />
    <None Remove="ClientApp\dist\bootstrap-icons.b2e5aab643c6f0fd2da6.woff2" />
    <None Remove="ClientApp\dist\index.html" />
    <None Remove="ClientApp\dist\main.5e327d990267be918cf9.js" />
    <None Remove="ClientApp\dist\polyfills.9a1545c58d54af738c0c.js" />
    <None Remove="ClientApp\dist\roboto-v30-latin-regular.1b1af1e4b3a278058097.svg" />
    <None Remove="ClientApp\dist\roboto-v30-latin-regular.6b1ef4e4ab8eafee13c1.ttf" />
    <None Remove="ClientApp\dist\roboto-v30-latin-regular.b009a76ad6afe4ebd301.woff2" />
    <None Remove="ClientApp\dist\roboto-v30-latin-regular.e2f36b803fec4bdcd1bc.eot" />
    <None Remove="ClientApp\dist\roboto-v30-latin-regular.f1e2a76794cb86b2aa8e.woff" />
    <None Remove="ClientApp\dist\runtime.35355e84fe9936437d57.js" />
    <None Remove="ClientApp\dist\styles.0a1d5d82097a971dad4a.css" />
    <None Remove="ClientApp\src\app\shared\models\picker-mode.ts" />
  </ItemGroup>

  <ItemGroup>
    <TypeScriptCompile Include="ClientApp\src\app\shared\models\picker-mode.ts" />
  </ItemGroup>

  <Target Name="DebugEnsureNodeEnv" BeforeTargets="Build" Condition=" '$(Configuration)' == 'Debug' And !Exists('$(SpaRoot)node_modules') ">
    <!-- Ensure Node.js is installed -->
    <Exec Command="node --version" ContinueOnError="true">
      <Output TaskParameter="ExitCode" PropertyName="ErrorCode" />
    </Exec>
    <Error Condition="'$(ErrorCode)' != '0'" Text="Node.js is required to build and run this project. To continue, please install Node.js from https://nodejs.org/, and then restart your command prompt or IDE." />
    <Message Importance="high" Text="Restoring dependencies using 'npm'. This may take several minutes..." />
    <Exec WorkingDirectory="$(SpaRoot)" Command="npm install" />
  </Target>

  <Target Name="PublishRunWebpack" AfterTargets="ComputeFilesToPublish">
    <!-- As part of publishing, ensure the JS resources are freshly built in production mode -->
    <Exec WorkingDirectory="$(SpaRoot)" Command="npm install" />
    <Exec WorkingDirectory="$(SpaRoot)" Command="npm run build" />

    <!-- Include the newly-built files in the publish output -->
    <ItemGroup>
      <DistFiles Include="$(SpaRoot)dist\**; $(SpaRoot)dist-server\**" />
      <ResolvedFileToPublish Include="@(DistFiles->'%(FullPath)')" Exclude="@(ResolvedFileToPublish)">
        <RelativePath>wwwroot\%(RecursiveDir)%(FileName)%(Extension)</RelativePath>
        <CopyToPublishDirectory>PreserveNewest</CopyToPublishDirectory>
        <ExcludeFromSingleFile>true</ExcludeFromSingleFile>
      </ResolvedFileToPublish>
    </ItemGroup>
  </Target>

  <Target Name="NSwag" BeforeTargets="AfterBuild" Condition="'$(TF_BUILD)'!='True'">
    <Exec ConsoleToMSBuild="true" ContinueOnError="true" Command="$(NSwagExe_Net60) run nswag.json /variables:Bin=$(OutputPath)">
      <Output TaskParameter="ExitCode" PropertyName="NSwagExitCode" />
      <Output TaskParameter="ConsoleOutput" PropertyName="NSwagOutput" />
    </Exec>

    <Message Text="$(NSwagOutput)" Condition="'$(NSwagExitCode)' == '0'" Importance="low" />
    <Error Text="$(NSwagOutput)" Condition="'$(NSwagExitCode)' != '0'" />
  </Target>
</Project>
